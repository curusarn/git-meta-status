#!/usr/bin/env bash

config_path=~/.config/git-meta-status.sh

set -u

print_help() {
    echo "USAGE: meta ACTION"
    echo " "
    echo "ACTIONS: session-exit     Saves local git states to remote repository"
    echo "         status           Shows all git states of all machines"
    echo "         help             Shows this help"
}

# returns unique indentifier for a current repo based on origin remote address
uniq_git_repo_path() {
    if [[ ! -d ".git" ]]; then
        echo "ERR: <`pwd`> is not a git repository!"
        print_help
        exit 10
    fi
    remote=`git remote -v | grep origin | tr ' ' '\t' | cut -f2 | head -n 1`
    if [[ "$remote" != *"@"* ]]; then
        host=`echo "$remote" | cut -d'/' -f3`
        repo=`echo "$remote" | cut -d'/' -f4-`

        remote="git@$host:$repo"
    fi
    # keep the part between the '@' and '.git' | replace ':' with '/' 
    echo "$remote" | sed 's/^[a-zA-Z \t]*@//;s/\.git$//' | tr -s ':' '/'
}

meta_pull() {
    if [[ ! -d "$git_meta_path/.git" ]]; then
        echo "WARN: No .git directory <$git_meta_path/.git>"\
             " - cloning <$git_meta_remote>!"
        [[ ! -d "$git_meta_path" ]] && mkdir -p "$git_meta_path"
        git clone "$git_meta_remote" "$git_meta_path"
    fi
    cd "$git_meta_path" 
    git pull 
    cd "$save_dir" 
}

meta_record() {
    if [[ ! -d "$git_root" ]]; then 
        echo "ERR: git_root <$git_root> does not exist"
        print_help
        exit 30 
    fi
    if [[ ! -d "$git_meta_path/.git" ]]; then
        echo "ERR: Directory <$git_meta_path/.git> does not exist"
        print_help
        exit 31 
    fi
    cd "$git_root" 
    for repo in *; do
        cd "$git_root/$repo"
        if [[ ! -d .git ]]; then
            echo "WARN: <$git_root/$repo> is not a git repository - skipping!"
            continue
        fi
        
        path="$git_meta_path"/`uniq_git_repo_path`/"$device_id"
        [[ ! -d "$path" ]] && mkdir -p "$path"

        git rev-parse HEAD > "$path/HEAD"
        git rev-parse --short HEAD > "$path/HEAD_short"
        git status --short > "$path/status_short"
        git cherry -v > "$path/cherry_v"
    done
    cd "$save_dir"
}

meta_commit() {
    if [[ ! -d "$git_meta_path/.git" ]]; then
        echo "ERR: Directory <$git_meta_path/.git> does not exist"
        print_help
        exit 40 
    fi
    cd "$git_meta_path" 
    git add .
    if git diff --exit-code; then
        echo "WARN: Git states did not change - nothing to commit."
    else
        echo "commit"
        git commit -m "Device: $device_id"
    fi
    cd "$save_dir" 
}

meta_push() {
    if [[ ! -d "$git_meta_path/.git" ]]; then
        echo "ERR: Directory <$git_meta_path/.git> does not exist"
        print_help
        exit 50 
    fi
    cd "$git_meta_path" 

    if [[ -z "`git cherry -v`" ]]; then
        echo "WARN: Git states did not change - nothing to push."
    else
        echo "push"
        git push 
    fi

    cd "$save_dir" 
}

if [ $# -ne 1 ]; then
    echo "ERR: Wrong number of arguments - required 1, found <$#>"
    print_help
    exit 1
fi

# default config
git_path=~/git
git_meta_path=~/.cache/git-meta-status

# load config if exists
if [ -f "$config_path" ]; then 
    source "$config_path"
else
    echo "WARN: config file <$config_path> does not exist"\
         " - consider creating it."
fi

save_dir=`pwd`

case $1 in
    session-exit)
        meta_pull
        meta_record
        meta_commit
        meta_push
        ;;
    status)
        echo "ERR: Not implemented :("
        print_help
        exit 42
        ;;
    help)
        print_help
        exit 0
        ;;
    *)
        echo "ERR: Invalid action <$1>"
        print_help
        exit 2
        ;;
esac

